"use strict";(self.webpackChunkkubewarden_docusaurus=self.webpackChunkkubewarden_docusaurus||[]).push([[84488],{1187:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=i(85893),r=i(11151);const o={sidebar_label:"Defining PodDisruptionBudget",title:"Configuring PodDisruptionBudget for PolicyServers",description:"Configuring PodDisruptionBudget for Kubewarden PolicyServers.",keywords:["kubewarden","kubernetes","policyservers","poddisruptionbudget"],"doc-persona":["kubewarden-operator","kubewarden-integrator"],"doc-type":["howto"],"doc-topic":["operator-manual","policy-servers","poddisruptionbudget"]},t=void 0,s={id:"howtos/policy-servers/pod-disruption-budget",title:"Configuring PodDisruptionBudget for PolicyServers",description:"Configuring PodDisruptionBudget for Kubewarden PolicyServers.",source:"@site/docs/howtos/policy-servers/03-pod-disruption-budget.md",sourceDirName:"howtos/policy-servers",slug:"/howtos/policy-servers/pod-disruption-budget",permalink:"/next/howtos/policy-servers/pod-disruption-budget",draft:!1,unlisted:!1,editUrl:"https://github.com/kubewarden/docs/edit/main/docs/howtos/policy-servers/03-pod-disruption-budget.md",tags:[],version:"current",lastUpdatedAt:171275011e4,sidebarPosition:3,frontMatter:{sidebar_label:"Defining PodDisruptionBudget",title:"Configuring PodDisruptionBudget for PolicyServers",description:"Configuring PodDisruptionBudget for Kubewarden PolicyServers.",keywords:["kubewarden","kubernetes","policyservers","poddisruptionbudget"],"doc-persona":["kubewarden-operator","kubewarden-integrator"],"doc-type":["howto"],"doc-topic":["operator-manual","policy-servers","poddisruptionbudget"]},sidebar:"docs",previous:{title:"Using private registries",permalink:"/next/howtos/policy-servers/private-registry"},next:{title:"Configuring policies",permalink:"/next/howtos/policies"}},l={},d=[{value:"Understanding minAvailable and maxUnavailable",id:"understanding-minavailable-and-maxunavailable",level:2},{value:"Configuring minAvailable and maxUnavailable",id:"configuring-minavailable-and-maxunavailable",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["To enhance the resilience of Kubewarden policy server deployments, two fields\ncan be used: ",(0,a.jsx)(n.code,{children:"minAvailable"})," and ",(0,a.jsx)(n.code,{children:"maxUnavailable"}),". These fields are used by the\nKubewarden controller to create a\n",(0,a.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/run-application/configure-pdb/",children:"PodDisruptionBudget"}),"\n(PDB) for the policy server pods, thus ensuring high availability and\ncontrolled eviction in case of node maintenance or scaling operations."]}),"\n",(0,a.jsx)(n.h2,{id:"understanding-minavailable-and-maxunavailable",children:"Understanding minAvailable and maxUnavailable"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"minAvailable"})," field specifies the minimum number of policy server pods\nthat must be available at all times. This is crucial for maintaining the\noperational integrity of the Kubewarden policy server, ensuring that policies\nare continuously enforced without interruption. It can be defined as an integer or a\npercentage."]}),"\n",(0,a.jsxs)(n.p,{children:["When set, the Kubewarden controller creates a ",(0,a.jsx)(n.code,{children:"PodDisruptionBudget"})," object that prevents\nvoluntary disruptions from causing the number of available replicas to fall\nbelow this threshold. This is particularly important during operations such as\ncluster upgrades or maintenance."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"maxUnavailable"})," field dictates the maximum number of policy server pods\nthat can be unavailable at any given time. This setting allows for a controlled\ndegree of unavailability, which can be useful for performing rolling updates or\npartial maintenance without fully halting the policy enforcement mechanism. It\ncan also be defined as integer or percentage."]}),"\n",(0,a.jsxs)(n.p,{children:["When configured, it informs the creation of a ",(0,a.jsx)(n.code,{children:"PodDisruptionBudget"})," object that limits\nthe number of pods that can be voluntarily disrupted. This ensures that even\nduring disruptions, a certain level of service is maintained."]}),"\n",(0,a.jsx)(n.h2,{id:"configuring-minavailable-and-maxunavailable",children:"Configuring minAvailable and maxUnavailable"}),"\n",(0,a.jsxs)(n.p,{children:["When deploying or updating the Kubewarden policy server, you can specify these\nfields in your configuration to ensure the desired level of availability. It's\nimportant to note that you can specify only one of ",(0,a.jsx)(n.code,{children:"maxUnavailable"})," and\n",(0,a.jsx)(n.code,{children:"minAvailable"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policies.kubewarden.io/v1\nkind: PolicyServer\nmetadata:\n  name: your-policy-server\nspec:\n  # Other configuration fields\n  minAvailable: 2\n"})}),"\n",(0,a.jsx)(n.p,{children:"This configuration ensures that either at least two policy server pods are\navailable at all times."}),"\n",(0,a.jsxs)(n.p,{children:["In the same way, you can specify the ",(0,a.jsx)(n.code,{children:"maxUnavailable"})," field to ensure that no\nmore than 30% of the policy server pods are unavailable at any given time."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: policies.kubewarden.io/v1\nkind: PolicyServer\nmetadata:\n  name: your-policy-server\nspec:\n  # Other configuration fields\n  maxUnavailable: "30%"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>t});var a=i(67294);const r={},o=a.createContext(r);function t(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);